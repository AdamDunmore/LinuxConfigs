(defwidget bar []
    (box
        :class "bar"
        :orientation "h"

        (workspaces)
        (clock)
        (sysinfo)
    )
)

(defwidget workspaces []
    (box
         :halign "start"

         (workspace_button :workspace 1)
         (workspace_button :workspace 2)
         (workspace_button :workspace 3)
         (workspace_button :workspace 4)
         (workspace_button :workspace 5)
         (workspace_button :workspace 6)
         (workspace_button :workspace 7)
         (workspace_button :workspace 8)
         (workspace_button :workspace 9)
         (workspace_button :workspace 10)
    )
)

(defwidget workspace_button [workspace]
    (button :class {activeworkspace_var == workspace ? "workspace_active" : "workspace_inactive"} :onclick "./scripts/change_workspace.sh ${workspace}" workspace)
)


(defwidget clock []
    (box
        :class "clock"
        :halign "center"

        time
    )
)


(defwidget sysinfo []
    (box
        :halign "end"
        :spacing 10	

        (button
            :onclick "./scripts/open_menu.sh"

            (box
                (battery)
                (brightness)
                (volume)
            )
        )
    )
)

(defwidget volume []
    (box 
        :class "sys_box"
    
        "    ${volume_var}%"
    )
)

(defwidget brightness []
    (box
        :class "sys_box"
    
        "󰃠    ${brightness_var}%"
    )
)

(defwidget battery []
    (box
        :class "sys_box"
    
        "    ${battery_var}%"
    )
)

(defwidget menu []
    (box
        :class "menu"
        :orientation "v"
        
        (power)
        (scale_bar :label "" :type "volume" :value volume_var :onchange "~/.config/eww/scripts/change_volume.sh {}")
        (scale_bar :label "󰃠" :type "brightness" :value brightness_var :onchange "~/.config/eww/scripts/change_brightness.sh {}")
    )
)

(defwidget power []
    (box
        :orientation "h"
        :halign "end"
        :spacing 5

        (button
            :class "power_button"
            :onclick "reboot"

            ""
        )

        (button
            :class "power_button"
            :onclick "shutdown now"

            "󰐥"
        )
    )
)

(defwidget scale_bar [label type value onchange]
    (box
        :space-evenly false

        (box
            :class "text_scale"
            "${label}"
        )

        (scale 
            :class "${type}_scale" 
            :hexpand true
            :value value
            :onchange onchange
            :min 0 
            :max 101
            :active {onchange != "" ? true : false}
            :orientation "h"
        )
    )
)

(defwindow bar
  :class "bar_window"
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :geometry (geometry :x "0%" :y "10px" :width "90%" :anchor "top center")
  
  (bar)
)

(defwindow menu
    :monitor 0
    :geometry (geometry :x "100px" :y "10px" :anchor "top right")
    :wm-ignore true
    :windowtype "normal"

    (menu)
)

(defpoll time :interval "10s"
  "date '+%H:%M'"
)

(deflisten volume_var
    'tail -F ~/.config/eww/misc/volume.txt'
)

(deflisten brightness_var
    'tail -F ~/.config/eww/misc/brightness.txt'
)

(defpoll battery_var :interval "10s"
    'cat /sys/class/power_supply/BAT1/capacity'
)

(deflisten activeworkspace_var
    'tail -F ~/.config/eww/misc/workspace.txt'
)
